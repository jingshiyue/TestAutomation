[2020-05-15 09:32:13,580] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 09:32:17,419] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 09:32:17,423] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 09:32:18,305] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 09:32:18,306] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 09:32:18,313] INFO [testcase_manage.views:36] 6
[2020-05-15 09:32:18,315] INFO [testcase_manage.views:36] 7
[2020-05-15 09:32:18,316] INFO [testcase_manage.views:36] 8
[2020-05-15 09:32:18,317] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 09:32:18,317] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 09:32:32,858] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 09:38:42,058] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 09:38:42,059] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 09:38:44,183] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 09:38:44,185] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>]>
[2020-05-15 09:38:44,190] INFO [testcase_manage.views:36] 6
[2020-05-15 09:38:44,191] INFO [testcase_manage.views:36] 7
[2020-05-15 09:38:44,193] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}}
[2020-05-15 09:38:44,193] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 09:38:46,838] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7']}>
[2020-05-15 09:40:58,850] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 09:40:58,851] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 09:40:59,624] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 09:40:59,625] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 09:40:59,631] INFO [testcase_manage.views:36] 6
[2020-05-15 09:40:59,633] INFO [testcase_manage.views:36] 7
[2020-05-15 09:40:59,634] INFO [testcase_manage.views:36] 8
[2020-05-15 09:40:59,636] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 09:40:59,636] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 09:41:01,583] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 09:41:04,827] INFO [runCase:34] teardown_method...
[2020-05-15 09:41:06,061] INFO [runCase:120] teardown_method...
[2020-05-15 09:41:06,065] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 09:41:06,067] INFO [runCase:195] D:\workfile\zhongkeyuan_workspace\TestAutomation
[2020-05-15 10:06:18,681] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:06:18,683] INFO [testcase_manage.views:52] 呼和浩特机场
[2020-05-15 10:06:21,803] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:06:21,806] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 10:06:22,623] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 10:06:22,624] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 10:06:22,632] INFO [testcase_manage.views:36] 6
[2020-05-15 10:06:22,634] INFO [testcase_manage.views:36] 7
[2020-05-15 10:06:22,636] INFO [testcase_manage.views:36] 8
[2020-05-15 10:06:22,639] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 10:06:22,640] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 10:06:25,428] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 10:07:14,680] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:07:14,681] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 10:07:15,310] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 10:07:15,311] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 10:07:15,318] INFO [testcase_manage.views:36] 6
[2020-05-15 10:07:15,320] INFO [testcase_manage.views:36] 7
[2020-05-15 10:07:15,322] INFO [testcase_manage.views:36] 8
[2020-05-15 10:07:15,324] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 10:07:15,325] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 10:07:17,349] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 10:09:15,608] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:09:15,609] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 10:09:16,317] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 10:09:16,319] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 10:09:16,327] INFO [testcase_manage.views:36] 6
[2020-05-15 10:09:16,328] INFO [testcase_manage.views:36] 7
[2020-05-15 10:09:16,330] INFO [testcase_manage.views:36] 8
[2020-05-15 10:09:16,331] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 10:09:16,332] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 10:09:18,251] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 10:09:21,128] INFO [runCase:34] teardown_method...
[2020-05-15 10:09:22,342] INFO [runCase:120] teardown_method...
[2020-05-15 10:09:22,346] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 10:09:22,348] INFO [runCase:195] D:\workfile\zhongkeyuan_workspace\TestAutomation
[2020-05-15 10:11:01,240] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:11:01,241] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 10:11:01,966] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 10:11:01,967] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 10:11:01,974] INFO [testcase_manage.views:36] 6
[2020-05-15 10:11:01,976] INFO [testcase_manage.views:36] 7
[2020-05-15 10:11:01,977] INFO [testcase_manage.views:36] 8
[2020-05-15 10:11:01,978] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 10:11:01,979] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 10:11:03,717] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 10:11:06,644] INFO [runCase:34] teardown_method...
[2020-05-15 10:11:07,859] INFO [runCase:120] teardown_method...
[2020-05-15 10:11:07,863] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 10:11:07,865] INFO [runCase:195] D:\workfile\zhongkeyuan_workspace\TestAutomation
[2020-05-15 10:14:49,880] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 10:14:49,881] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 10:14:50,575] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 10:14:50,577] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 10:14:50,583] INFO [testcase_manage.views:36] 6
[2020-05-15 10:14:50,584] INFO [testcase_manage.views:36] 7
[2020-05-15 10:14:50,586] INFO [testcase_manage.views:36] 8
[2020-05-15 10:14:50,588] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 10:14:50,589] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 10:14:52,210] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 10:14:55,182] INFO [runCase:34] teardown_method...
[2020-05-15 10:14:56,393] INFO [runCase:120] teardown_method...
[2020-05-15 10:14:56,397] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 10:14:56,399] INFO [runCase:195] D:\workfile\zhongkeyuan_workspace\TestAutomation
[2020-05-15 12:10:12,659] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 12:10:12,660] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 12:10:13,920] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 12:10:13,921] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 12:10:13,930] INFO [testcase_manage.views:36] 6
[2020-05-15 12:10:13,933] INFO [testcase_manage.views:36] 7
[2020-05-15 12:10:13,934] INFO [testcase_manage.views:36] 8
[2020-05-15 12:10:13,936] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 12:10:13,937] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 12:10:14,960] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 12:10:17,984] INFO [runCase:34] teardown_method...
[2020-05-15 12:10:19,197] INFO [runCase:120] teardown_method...
[2020-05-15 12:10:19,201] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 12:10:19,203] INFO [runCase:195] D:\workfile\zhongkeyuan_workspace\TestAutomation
[2020-05-15 13:52:11,037] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 13:52:11,038] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 13:52:12,843] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 13:52:12,844] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 13:52:12,849] INFO [testcase_manage.views:36] 6
[2020-05-15 13:52:12,851] INFO [testcase_manage.views:36] 7
[2020-05-15 13:52:12,852] INFO [testcase_manage.views:36] 8
[2020-05-15 13:52:12,854] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 13:52:12,854] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 13:52:15,045] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 13:52:17,952] INFO [runCase:34] teardown_method...
[2020-05-15 13:52:19,182] INFO [runCase:120] teardown_method...
[2020-05-15 13:52:19,184] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 13:52:20,534] INFO [runCase:198] b'{\'cwd\': \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\TestAutomation\'}\r\n\x1b[1m============================= test session starts =============================\x1b[0m\r\nplatform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\\python37\\python.exe\r\ncachedir: .pytest_cache\r\nmetadata: {\'Python\': \'3.7.3\', \'Platform\': \'Windows-10-10.0.14393-SP0\', \'Packages\': {\'pytest\': \'4.0.2\', \'py\': \'1.8.0\', \'pluggy\': \'0.12.0\'}, \'Plugins\': {\'allure-adaptor\': \'1.7.10\', \'html\': \'1.21.1\', \'metadata\': \'1.8.0\', \'pythonpath\': \'0.7.3\', \'repeat\': \'0.8.0\', \'rerunfailures\': \'7.0\'}, \'JAVA_HOME\': \'C:\\\\Program Files\\\\Java\\\\jdk1.8.0_131\'}\r\nrootdir: D:\\workfile\\zhongkeyuan_workspace\\TestAutomation\\process_test\\https_20190709, inifile: pytest.ini\r\nplugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0\r\n\x1b[1mcollecting ... \x1b[0m{\'cwd\': \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\TestAutomation\'}\r\ncollected 5 items\r\n\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_zhiji[creat_zhiji_random0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_01[creat_zhiji_byFlight0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_02[creat_zhiji_random0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_03 \x1b[31mERROR\x1b[0m\r\n\x1b[1m------------------------------ live log teardown ------------------------------\x1b[0m\r\n[2020-05-15 13:52:20 test_process.py line:102]\x1b[32mINFO\x1b[0m:  teardown_function\xa3\xba\xc3\xbf\xb8\xf6\xd3\xc3\xc0\xfd\xbd\xe1\xca\xf8\xba\xf3\xb6\xbc\xbb\xe1\xd6\xb4\xd0\xd0\r\n\r\n\r\n=================================== ERRORS ====================================\r\n\x1b[31m\x1b[1m__________________________ ERROR at setup of test_03 __________________________\x1b[0m\r\n\r\n\x1b[1m    @pytest.fixture()\x1b[0m\r\n\x1b[1m    def struct_pho():\x1b[0m\r\n\x1b[1m        """\x1b[0m\r\n\x1b[1m        \xb3\xf5\xca\xbc\xbb\xaf\xd5\xd5\xc6\xac\xa1\xa2\xcc\xd8\xd5\xf7\x1b[0m\r\n\x1b[1m        :return:\x1b[0m\r\n\x1b[1m        """\x1b[0m\r\n\x1b[1m        pho_dic = {}\x1b[0m\r\n\x1b[1m        largePhoto = to_base64(r"D:\\workfile\\zhongkeyuan_workspace\\test_photoes\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\1018.jpg")\x1b[0m\r\n\x1b[1m        idx_pic = random.randint(10, 74)\x1b[0m\r\n\x1b[1m        # idx_pic = 31\x1b[0m\r\n\x1b[1m        idx_feature = random.randint(10, 74)\x1b[0m\r\n\x1b[1m        # idx_feature = 31\x1b[0m\r\n\x1b[1m        idx_pic = idx_feature\x1b[0m\r\n\x1b[1m    \x1b[0m\r\n\x1b[1m>       cardPhoto = to_base64(os.path.join(r"D:\\workfile\\zhongkeyuan_workspace\\test_photoes\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)", "%d.jpg" % (idx_pic-1)))\x1b[0m\r\n\r\n\x1b[1m\x1b[31mprocess_test\\https_20190709\\test_case\\conftest.py\x1b[0m:25: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\npicturepath = \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\test_photoes\\\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\\\9.jpg\'\r\n\r\n\x1b[1m    def to_base64(picturepath):\x1b[0m\r\n\x1b[1m        """\x1b[0m\r\n\x1b[1m        \xbd\xab\xcd\xbc\xc6\xac\xd7\xaa\xbb\xbb\xb3\xc9base64\xb1\xe0\xc2\xeb\x1b[0m\r\n\x1b[1m        :param picturepath:\xcd\xbc\xc6\xac\xce\xc4\xbc\xfe\xc2\xb7\xbe\xb6\x1b[0m\r\n\x1b[1m        :return:\x1b[0m\r\n\x1b[1m        """\x1b[0m\r\n\x1b[1m>       with open(file=picturepath, mode="rb") as fp:\x1b[0m\r\n\x1b[1m\x1b[31mE       FileNotFoundError: [Errno 2] No such file or directory: \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\test_photoes\\\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\\\9.jpg\'\x1b[0m\r\n\r\n\x1b[1m\x1b[31mprocess_test\\https_20190709\\common\\common_method.py\x1b[0m:54: FileNotFoundError\r\n- generated html file: file://D:\\workfile\\zhongkeyuan_workspace\\TestAutomation\\report\\report.html -\r\n\x1b[31m\x1b[1m===================== 4 skipped, 1 error in 0.19 seconds ======================\x1b[0m\r\n'
[2020-05-15 13:56:53,237] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 13:56:53,237] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 13:56:53,867] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 13:56:53,868] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 13:56:53,873] INFO [testcase_manage.views:36] 6
[2020-05-15 13:56:53,875] INFO [testcase_manage.views:36] 7
[2020-05-15 13:56:53,876] INFO [testcase_manage.views:36] 8
[2020-05-15 13:56:53,878] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 13:56:53,879] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 13:56:55,617] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 13:56:58,544] INFO [runCase:34] teardown_method...
[2020-05-15 13:56:59,796] INFO [runCase:120] teardown_method...
[2020-05-15 13:56:59,799] INFO [runCase:194] 开始测试: 第一个机场流程测试 ...
[2020-05-15 13:57:22,537] INFO [runCase:198] b'{\'cwd\': \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\TestAutomation\'}\r\n\x1b[1m============================= test session starts =============================\x1b[0m\r\nplatform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\\python37\\python.exe\r\ncachedir: .pytest_cache\r\nmetadata: {\'Python\': \'3.7.3\', \'Platform\': \'Windows-10-10.0.14393-SP0\', \'Packages\': {\'pytest\': \'4.0.2\', \'py\': \'1.8.0\', \'pluggy\': \'0.12.0\'}, \'Plugins\': {\'allure-adaptor\': \'1.7.10\', \'html\': \'1.21.1\', \'metadata\': \'1.8.0\', \'pythonpath\': \'0.7.3\', \'repeat\': \'0.8.0\', \'rerunfailures\': \'7.0\'}, \'JAVA_HOME\': \'C:\\\\Program Files\\\\Java\\\\jdk1.8.0_131\'}\r\nrootdir: D:\\workfile\\zhongkeyuan_workspace\\TestAutomation\\process_test\\https_20190709, inifile: pytest.ini\r\nplugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0\r\n\x1b[1mcollecting ... \x1b[0m{\'cwd\': \'D:\\\\workfile\\\\zhongkeyuan_workspace\\\\TestAutomation\'}\r\ncollected 5 items\r\n\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_zhiji[creat_zhiji_random0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_01[creat_zhiji_byFlight0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_02[creat_zhiji_random0] \x1b[33mSKIPPED\x1b[0m\r\nprocess_test\\https_20190709\\test_case\\test_process.py::test_03 \r\n\x1b[1m------------------------------- live log setup --------------------------------\x1b[0m\r\n[2020-05-15 13:57:01 conftest.py line:38]\x1b[32mINFO\x1b[0m:  cardPhoto: D:\\workfile\\zhongkeyuan_workspace\test_photoes\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\32.jpg\r\n[2020-05-15 13:57:01 conftest.py line:39]\x1b[32mINFO\x1b[0m:  scenePhoto: D:\\workfile\\zhongkeyuan_workspace\\test_photoes\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\33.jpg\r\n[2020-05-15 13:57:01 conftest.py line:40]\x1b[32mINFO\x1b[0m:  scenePhoto_fuhe: D:\\workfile\\zhongkeyuan_workspace\test_photoes\\picture(\xcf\xd6\xb3\xa1\xd5\xd5\xc6\xac)\\34.jpg\r\n\x1b[1m-------------------------------- live log call --------------------------------\x1b[0m\r\n[2020-05-15 13:57:01 test_process.py line:288]\x1b[32mINFO\x1b[0m:  {\'\xd6\xd0\xd7\xaa\xcd\xa8\xb5\xc0\xa3\xba\xcb\xa2\xc6\xb1: \': \'{"reqId":"e5270c2c967011eab0c98cec4b554198","status":0,"msg":"Success","sysTime":"20200515135712","faceImg":""}\'}\r\n[2020-05-15 13:57:21 connection_workflow.py line:179]\x1b[32mINFO\x1b[0m:  Pika version 1.1.0 connecting to (\'192.168.10.184\', 5672)\r\n[2020-05-15 13:57:21 io_services_utils.py line:345]\x1b[32mINFO\x1b[0m:  Socket connected: <socket.socket fd=336, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=(\'192.168.10.42\', 57472), raddr=(\'192.168.10.184\', 5672)>\r\n[2020-05-15 13:57:21 connection_workflow.py line:428]\x1b[32mINFO\x1b[0m:  Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).\r\n[2020-05-15 13:57:21 connection_workflow.py line:293]\x1b[32mINFO\x1b[0m:  AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>\r\n[2020-05-15 13:57:21 connection_workflow.py line:725]\x1b[32mINFO\x1b[0m:  AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>\r\n[2020-05-15 13:57:21 blocking_connection.py line:453]\x1b[32mINFO\x1b[0m:  Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>\r\n[2020-05-15 13:57:21 blocking_connection.py line:1247]\x1b[32mINFO\x1b[0m:  Created channel=1\r\n[2020-05-15 13:57:21 blocking_connection.py line:788]\x1b[32mINFO\x1b[0m:  Closing connection (200): Normal shutdown\r\n[2020-05-15 13:57:21 channel.py line:534]\x1b[32mINFO\x1b[0m:  Closing channel (200): \'Normal shutdown\' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>\r\n[2020-05-15 13:57:21 channel.py line:1119]\x1b[32mINFO\x1b[0m:  Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E211F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>\r\n[2020-05-15 13:57:21 connection.py line:1295]\x1b[32mINFO\x1b[0m:  Closing connection (200): \'Normal shutdown\'\r\n[2020-05-15 13:57:21 io_services_utils.py line:732]\x1b[32mINFO\x1b[0m:  Aborting transport connection: state=1; <socket.socket fd=336, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=(\'192.168.10.42\', 57472), raddr=(\'192.168.10.184\', 5672)>\r\n[2020-05-15 13:57:21 io_services_utils.py line:907]\x1b[32mINFO\x1b[0m:  _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=336, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=(\'192.168.10.42\', 57472), raddr=(\'192.168.10.184\', 5672)>\r\n[2020-05-15 13:57:21 io_services_utils.py line:870]\x1b[32mINFO\x1b[0m:  Deactivating transport: state=1; <socket.socket fd=336, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=(\'192.168.10.42\', 57472), raddr=(\'192.168.10.184\', 5672)>\r\n[2020-05-15 13:57:21 connection.py line:1999]\x1b[32mINFO\x1b[0m:  AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) \'Normal shutdown\'\r\n[2020-05-15 13:57:21 connection.py line:2065]\x1b[32mINFO\x1b[0m:  Stack terminated due to ConnectionClosedByClient: (200) \'Normal shutdown\'\r\n[2020-05-15 13:57:21 io_services_utils.py line:883]\x1b[32mINFO\x1b[0m:  Closing transport socket and unlinking: state=3; <socket.socket fd=336, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=(\'192.168.10.42\', 57472), raddr=(\'192.168.10.184\', 5672)>\r\n[2020-05-15 13:57:21 blocking_connection.py line:525]\x1b[32mINFO\x1b[0m:  User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) \'Normal shutdown\')\r\n[2020-05-15 13:57:22 test_process.py line:296]\x1b[32mINFO\x1b[0m:  {\'\xd6\xb5\xbb\xfa\xd0\xc5\xcf\xa2: \': {\'idNo\': \'610101199605091713\', \'sex\': 1, \'lk_flight\': \'CA8128\', \'lk_gateno\': \'10\', \'lk_date\': \'20200515\', \'lk_chkt\': \'20200515135721\', \'lk_inf\': \'\', \'lk_outtime\': \'20200515165721\', \'lk_cname\': \'\xb4\xf3\xce\xf7\xb9\xcf7\', \'lk_ename\': \'DAXIGUA7\', \'lk_seat\': \'03A\', \'lk_desk\': \'CTU\', \'lk_bdno\': \'03\'}}\r\n[2020-05-15 13:57:22 test_process.py line:318]\x1b[32mINFO\x1b[0m:  {\'A\xc3\xc5:\': \'{"reqId":"f1b68b98967011eaa1a48cec4b554198","status":0,"msg":"Success","sysTime":"20200515135733","result":1}\'}\r\n[2020-05-15 13:57:22 test_process.py line:344]\x1b[32mINFO\x1b[0m:  {\'B\xc3\xc5: \': \'{"reqId":"f1bca80c967011ea81f38cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515135733","result":1,"score":0.0}\'}\r\n[2020-05-15 13:57:22 test_process.py line:346]\x1b[32mINFO\x1b[0m:  test_03\xb2\xe2\xca\xd4\xcd\xea\xb3\xc9\r\n\x1b[32mPASSED\x1b[0m\r\n\x1b[1m------------------------------ live log teardown ------------------------------\x1b[0m\r\n[2020-05-15 13:57:22 test_process.py line:102]\x1b[32mINFO\x1b[0m:  teardown_function\xa3\xba\xc3\xbf\xb8\xf6\xd3\xc3\xc0\xfd\xbd\xe1\xca\xf8\xba\xf3\xb6\xbc\xbb\xe1\xd6\xb4\xd0\xd0\r\n\r\n\r\n- generated html file: file://D:\\workfile\\zhongkeyuan_workspace\\TestAutomation\\report\\report.html -\r\n\x1b[32m\x1b[1m==================== 1 passed, 4 skipped in 21.53 seconds =====================\x1b[0m\r\n'
[2020-05-15 14:07:00,884] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:07:00,885] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:07:01,729] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:07:01,730] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:07:01,737] INFO [testcase_manage.views:36] 6
[2020-05-15 14:07:01,738] INFO [testcase_manage.views:36] 7
[2020-05-15 14:07:01,740] INFO [testcase_manage.views:36] 8
[2020-05-15 14:07:01,741] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:07:01,742] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:07:02,974] INFO [testcase_manage.views:68] <QueryDict: {}>
[2020-05-15 14:07:03,424] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:07:34,115] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:07:34,118] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:07:35,066] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:07:35,067] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:07:35,073] INFO [testcase_manage.views:36] 6
[2020-05-15 14:07:35,076] INFO [testcase_manage.views:36] 7
[2020-05-15 14:07:35,077] INFO [testcase_manage.views:36] 8
[2020-05-15 14:07:35,078] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:07:35,079] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:07:36,860] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:10:50,142] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:10:50,142] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:10:50,817] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:10:50,818] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:10:50,825] INFO [testcase_manage.views:36] 6
[2020-05-15 14:10:50,828] INFO [testcase_manage.views:36] 7
[2020-05-15 14:10:50,829] INFO [testcase_manage.views:36] 8
[2020-05-15 14:10:50,830] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:10:50,831] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:10:52,420] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:11:25,580] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:11:25,581] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:11:26,216] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:11:26,217] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:11:26,223] INFO [testcase_manage.views:36] 6
[2020-05-15 14:11:26,225] INFO [testcase_manage.views:36] 7
[2020-05-15 14:11:26,227] INFO [testcase_manage.views:36] 8
[2020-05-15 14:11:26,228] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:11:26,229] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:11:27,907] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:34:48,275] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:34:48,276] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:34:49,002] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:34:49,002] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:34:49,008] INFO [testcase_manage.views:36] 6
[2020-05-15 14:34:49,010] INFO [testcase_manage.views:36] 7
[2020-05-15 14:34:49,012] INFO [testcase_manage.views:36] 8
[2020-05-15 14:34:49,013] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:34:49,013] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:34:50,459] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:37:16,667] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:37:16,668] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:37:17,255] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:37:17,256] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:37:17,263] INFO [testcase_manage.views:36] 6
[2020-05-15 14:37:17,265] INFO [testcase_manage.views:36] 7
[2020-05-15 14:37:17,266] INFO [testcase_manage.views:36] 8
[2020-05-15 14:37:17,267] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:37:17,268] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:37:18,848] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:37:21,850] INFO [runCase:34] teardown_method...
[2020-05-15 14:37:23,054] INFO [runCase:120] teardown_method...
[2020-05-15 14:37:23,057] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:40:18,954] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:40:18,954] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:40:19,904] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:40:19,905] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:40:19,911] INFO [testcase_manage.views:36] 6
[2020-05-15 14:40:19,914] INFO [testcase_manage.views:36] 7
[2020-05-15 14:40:19,915] INFO [testcase_manage.views:36] 8
[2020-05-15 14:40:19,916] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:40:19,917] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:40:21,961] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:40:24,964] INFO [runCase:34] teardown_method...
[2020-05-15 14:40:26,174] INFO [runCase:120] teardown_method...
[2020-05-15 14:40:26,178] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:42:08,506] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:42:11,619] INFO [runCase:34] teardown_method...
[2020-05-15 14:42:11,915] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:42:11,916] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:42:12,689] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:42:12,690] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:42:12,697] INFO [testcase_manage.views:36] 6
[2020-05-15 14:42:12,699] INFO [testcase_manage.views:36] 7
[2020-05-15 14:42:12,701] INFO [testcase_manage.views:36] 8
[2020-05-15 14:42:12,702] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:42:12,703] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:42:12,876] INFO [runCase:120] teardown_method...
[2020-05-15 14:42:12,879] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:42:13,863] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:42:16,945] INFO [runCase:34] teardown_method...
[2020-05-15 14:42:18,162] INFO [runCase:120] teardown_method...
[2020-05-15 14:42:18,165] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:43:17,418] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:43:17,419] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:43:19,719] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:43:19,721] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:43:19,726] INFO [testcase_manage.views:36] 6
[2020-05-15 14:43:19,728] INFO [testcase_manage.views:36] 7
[2020-05-15 14:43:19,729] INFO [testcase_manage.views:36] 8
[2020-05-15 14:43:19,730] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:43:19,731] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:43:21,382] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:43:24,266] INFO [runCase:34] teardown_method...
[2020-05-15 14:43:25,472] INFO [runCase:120] teardown_method...
[2020-05-15 14:43:25,474] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:45:11,603] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:45:11,603] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:45:12,423] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:45:12,424] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:45:12,432] INFO [testcase_manage.views:36] 6
[2020-05-15 14:45:12,433] INFO [testcase_manage.views:36] 7
[2020-05-15 14:45:12,435] INFO [testcase_manage.views:36] 8
[2020-05-15 14:45:12,436] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:45:12,436] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:45:13,535] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:45:16,458] INFO [runCase:34] teardown_method...
[2020-05-15 14:45:17,667] INFO [runCase:120] teardown_method...
[2020-05-15 14:45:17,670] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:46:25,867] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 14:46:25,867] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 14:46:26,639] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 14:46:26,640] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 14:46:26,647] INFO [testcase_manage.views:36] 6
[2020-05-15 14:46:26,649] INFO [testcase_manage.views:36] 7
[2020-05-15 14:46:26,651] INFO [testcase_manage.views:36] 8
[2020-05-15 14:46:26,652] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 14:46:26,653] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 14:46:28,257] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 14:46:31,185] INFO [runCase:34] teardown_method...
[2020-05-15 14:46:32,396] INFO [runCase:120] teardown_method...
[2020-05-15 14:46:32,401] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 14:46:33,480] INFO [runCase:205] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 14:46:33,481] INFO [runCase:205] [1m============================= test session starts =============================[0m
[2020-05-15 14:46:33,490] INFO [runCase:205] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 14:46:33,492] INFO [runCase:205] cachedir: .pytest_cache
[2020-05-15 14:46:33,492] INFO [runCase:205] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 14:46:33,493] INFO [runCase:205] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 14:46:33,494] INFO [runCase:205] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 14:46:33,507] INFO [runCase:205] [1mcollecting ... [0m{'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 14:46:33,509] INFO [runCase:205] collected 5 items
[2020-05-15 14:46:33,510] INFO [runCase:205] 
[2020-05-15 14:46:33,511] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] [33mSKIPPED[0m
[2020-05-15 14:46:33,513] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] [33mSKIPPED[0m
[2020-05-15 14:46:33,514] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] [33mSKIPPED[0m
[2020-05-15 14:46:33,515] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] [33mSKIPPED[0m
[2020-05-15 14:46:33,518] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 14:46:33,519] INFO [runCase:205] [1m------------------------------- live log setup --------------------------------[0m
[2020-05-15 14:46:33,520] INFO [runCase:205] [2020-05-15 14:46:33 conftest.py line:38][32mINFO[0m:  cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\38.jpg
[2020-05-15 14:46:33,521] INFO [runCase:205] [2020-05-15 14:46:33 conftest.py line:39][32mINFO[0m:  scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\39.jpg
[2020-05-15 14:46:33,523] INFO [runCase:205] [2020-05-15 14:46:33 conftest.py line:40][32mINFO[0m:  scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\40.jpg
[2020-05-15 14:46:33,558] INFO [runCase:205] [1m-------------------------------- live log call --------------------------------[0m
[2020-05-15 14:46:33,559] INFO [runCase:205] [2020-05-15 14:46:33 test_process.py line:288][32mINFO[0m:  {'中转通道：刷票: ': '{"reqId":"d0b7be2c967711ea8eb28cec4b554198","status":0,"msg":"Success","sysTime":"20200515144644","faceImg":""}'}
[2020-05-15 14:46:53,566] INFO [runCase:205] [2020-05-15 14:46:53 connection_workflow.py line:179][32mINFO[0m:  Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 14:46:53,568] INFO [runCase:205] [2020-05-15 14:46:53 io_services_utils.py line:345][32mINFO[0m:  Socket connected: <socket.socket fd=772, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 60725), raddr=('192.168.10.184', 5672)>
[2020-05-15 14:46:53,569] INFO [runCase:205] [2020-05-15 14:46:53 connection_workflow.py line:428][32mINFO[0m:  Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 14:46:53,575] INFO [runCase:205] [2020-05-15 14:46:53 connection_workflow.py line:293][32mINFO[0m:  AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 14:46:53,576] INFO [runCase:205] [2020-05-15 14:46:53 connection_workflow.py line:725][32mINFO[0m:  AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 14:46:53,577] INFO [runCase:205] [2020-05-15 14:46:53 blocking_connection.py line:453][32mINFO[0m:  Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 14:46:53,578] INFO [runCase:205] [2020-05-15 14:46:53 blocking_connection.py line:1247][32mINFO[0m:  Created channel=1
[2020-05-15 14:46:53,579] INFO [runCase:205] [2020-05-15 14:46:53 blocking_connection.py line:788][32mINFO[0m:  Closing connection (200): Normal shutdown
[2020-05-15 14:46:53,580] INFO [runCase:205] [2020-05-15 14:46:53 channel.py line:534][32mINFO[0m:  Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 14:46:53,581] INFO [runCase:205] [2020-05-15 14:46:53 channel.py line:1119][32mINFO[0m:  Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04A11290> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 14:46:53,582] INFO [runCase:205] [2020-05-15 14:46:53 connection.py line:1295][32mINFO[0m:  Closing connection (200): 'Normal shutdown'
[2020-05-15 14:46:53,584] INFO [runCase:205] [2020-05-15 14:46:53 io_services_utils.py line:732][32mINFO[0m:  Aborting transport connection: state=1; <socket.socket fd=772, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 60725), raddr=('192.168.10.184', 5672)>
[2020-05-15 14:46:53,585] INFO [runCase:205] [2020-05-15 14:46:53 io_services_utils.py line:907][32mINFO[0m:  _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=772, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 60725), raddr=('192.168.10.184', 5672)>
[2020-05-15 14:46:53,586] INFO [runCase:205] [2020-05-15 14:46:53 io_services_utils.py line:870][32mINFO[0m:  Deactivating transport: state=1; <socket.socket fd=772, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 60725), raddr=('192.168.10.184', 5672)>
[2020-05-15 14:46:53,587] INFO [runCase:205] [2020-05-15 14:46:53 connection.py line:1999][32mINFO[0m:  AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 14:46:53,588] INFO [runCase:205] [2020-05-15 14:46:53 connection.py line:2065][32mINFO[0m:  Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 14:46:53,589] INFO [runCase:205] [2020-05-15 14:46:53 io_services_utils.py line:883][32mINFO[0m:  Closing transport socket and unlinking: state=3; <socket.socket fd=772, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 60725), raddr=('192.168.10.184', 5672)>
[2020-05-15 14:46:53,589] INFO [runCase:205] [2020-05-15 14:46:53 blocking_connection.py line:525][32mINFO[0m:  User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 14:46:54,584] INFO [runCase:205] [2020-05-15 14:46:54 test_process.py line:296][32mINFO[0m:  {'值机信息: ': {'idNo': '46020119610621092X', 'sex': 2, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515144653', 'lk_inf': '', 'lk_outtime': '20200515174653', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 14:46:54,610] INFO [runCase:205] [2020-05-15 14:46:54 test_process.py line:318][32mINFO[0m:  {'A门:': '{"reqId":"dd460106967711eaabeb8cec4b554198","status":0,"msg":"Success","sysTime":"20200515144705","result":1}'}
[2020-05-15 14:46:54,653] INFO [runCase:205] [2020-05-15 14:46:54 test_process.py line:344][32mINFO[0m:  {'B门: ': '{"reqId":"dd49fb28967711eab6228cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515144705","result":1,"score":0.0}'}
[2020-05-15 14:46:54,654] INFO [runCase:205] [2020-05-15 14:46:54 test_process.py line:346][32mINFO[0m:  test_03测试完成
[2020-05-15 14:46:54,655] INFO [runCase:205] [32mPASSED[0m
[2020-05-15 14:46:54,656] INFO [runCase:205] [1m------------------------------ live log teardown ------------------------------[0m
[2020-05-15 14:46:54,658] INFO [runCase:205] [2020-05-15 14:46:54 test_process.py line:102][32mINFO[0m:  teardown_function：每个用例结束后都会执行
[2020-05-15 14:46:54,663] INFO [runCase:205] 
[2020-05-15 14:46:54,664] INFO [runCase:205] 
[2020-05-15 14:46:54,665] INFO [runCase:205] - generated html file: file://D:\workfile\zhongkeyuan_workspace\TestAutomation\report\report.html -
[2020-05-15 14:46:54,666] INFO [runCase:205] [32m[1m==================== 1 passed, 4 skipped in 21.18 seconds =====================[0m
[2020-05-15 14:46:54,715] INFO [runCase:205] 
[2020-05-15 14:46:54,716] INFO [runCase:210] test cases complate ...
[2020-05-15 15:29:00,160] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 15:29:00,161] INFO [testcase_manage.views:52] 呼和浩特机场
[2020-05-15 15:29:02,164] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 15:29:02,165] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 15:29:02,950] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 15:29:02,951] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 15:29:02,958] INFO [testcase_manage.views:36] 6
[2020-05-15 15:29:02,960] INFO [testcase_manage.views:36] 7
[2020-05-15 15:29:02,961] INFO [testcase_manage.views:36] 8
[2020-05-15 15:29:02,963] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 15:29:02,964] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 15:29:04,688] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 15:29:07,769] INFO [runCase:34] teardown_method...
[2020-05-15 15:29:09,011] INFO [runCase:34] teardown_method...
[2020-05-15 15:29:10,252] INFO [runCase:120] teardown_method...
[2020-05-15 15:29:11,494] INFO [runCase:120] teardown_method...
[2020-05-15 15:29:11,539] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 15:29:12,637] INFO [runCase:205] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 15:29:12,638] INFO [runCase:205] ============================= test session starts =============================
[2020-05-15 15:29:12,639] INFO [runCase:205] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 15:29:12,644] INFO [runCase:205] cachedir: .pytest_cache
[2020-05-15 15:29:12,645] INFO [runCase:205] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 15:29:12,647] INFO [runCase:205] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 15:29:12,648] INFO [runCase:205] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 15:29:12,702] INFO [runCase:205] collecting ... {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 15:29:12,703] INFO [runCase:205] collected 5 items
[2020-05-15 15:29:12,704] INFO [runCase:205] 
[2020-05-15 15:29:12,705] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] SKIPPED
[2020-05-15 15:29:12,706] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] SKIPPED
[2020-05-15 15:29:12,707] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] SKIPPED
[2020-05-15 15:29:12,709] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] SKIPPED
[2020-05-15 15:29:12,796] INFO [runCase:205] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 15:29:12,798] INFO [runCase:205] ------------------------------- live log setup --------------------------------
[2020-05-15 15:29:12,799] INFO [runCase:205] conftest.py                 38 INFO     cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\56.jpg
[2020-05-15 15:29:12,799] INFO [runCase:205] conftest.py                 39 INFO     scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\57.jpg
[2020-05-15 15:29:12,800] INFO [runCase:205] conftest.py                 40 INFO     scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\58.jpg
[2020-05-15 15:29:12,839] INFO [runCase:205] -------------------------------- live log call --------------------------------
[2020-05-15 15:29:12,840] INFO [runCase:205] test_process.py            288 INFO     {'中转通道：刷票: ': '{"reqId":"c62a770a967d11ea9af78cec4b554198","status":0,"msg":"Success","sysTime":"20200515152924","faceImg":""}'}
[2020-05-15 15:29:32,846] INFO [runCase:205] connection_workflow.py     179 INFO     Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 15:29:32,849] INFO [runCase:205] io_services_utils.py       345 INFO     Socket connected: <socket.socket fd=692, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 63758), raddr=('192.168.10.184', 5672)>
[2020-05-15 15:29:32,850] INFO [runCase:205] connection_workflow.py     428 INFO     Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 15:29:32,855] INFO [runCase:205] connection_workflow.py     293 INFO     AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 15:29:32,856] INFO [runCase:205] connection_workflow.py     725 INFO     AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 15:29:32,857] INFO [runCase:205] blocking_connection.py     453 INFO     Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 15:29:32,858] INFO [runCase:205] blocking_connection.py    1247 INFO     Created channel=1
[2020-05-15 15:29:32,860] INFO [runCase:205] blocking_connection.py     788 INFO     Closing connection (200): Normal shutdown
[2020-05-15 15:29:32,860] INFO [runCase:205] channel.py                 534 INFO     Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 15:29:32,862] INFO [runCase:205] channel.py                1119 INFO     Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x05757B10> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 15:29:32,863] INFO [runCase:205] connection.py             1295 INFO     Closing connection (200): 'Normal shutdown'
[2020-05-15 15:29:32,865] INFO [runCase:205] io_services_utils.py       732 INFO     Aborting transport connection: state=1; <socket.socket fd=692, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 63758), raddr=('192.168.10.184', 5672)>
[2020-05-15 15:29:32,866] INFO [runCase:205] io_services_utils.py       907 INFO     _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=692, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 63758), raddr=('192.168.10.184', 5672)>
[2020-05-15 15:29:32,867] INFO [runCase:205] io_services_utils.py       870 INFO     Deactivating transport: state=1; <socket.socket fd=692, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 63758), raddr=('192.168.10.184', 5672)>
[2020-05-15 15:29:32,868] INFO [runCase:205] connection.py             1999 INFO     AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 15:29:32,869] INFO [runCase:205] connection.py             2065 INFO     Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 15:29:32,869] INFO [runCase:205] io_services_utils.py       883 INFO     Closing transport socket and unlinking: state=3; <socket.socket fd=692, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 63758), raddr=('192.168.10.184', 5672)>
[2020-05-15 15:29:32,870] INFO [runCase:205] blocking_connection.py     525 INFO     User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 15:29:33,865] INFO [runCase:205] test_process.py            296 INFO     {'值机信息: ': {'idNo': '42010719820727201X', 'sex': 1, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515152932', 'lk_inf': '', 'lk_outtime': '20200515182932', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 15:29:33,892] INFO [runCase:205] test_process.py            318 INFO     {'A门:': '{"reqId":"d2b94698967d11eaa7b78cec4b554198","status":0,"msg":"Success","sysTime":"20200515152945","result":1}'}
[2020-05-15 15:29:33,929] INFO [runCase:205] test_process.py            344 INFO     {'B门: ': '{"reqId":"d2bd670c967d11eab3b88cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515152945","result":1,"score":0.0}'}
[2020-05-15 15:29:33,930] INFO [runCase:205] test_process.py            346 INFO     test_03测试完成
[2020-05-15 15:29:33,931] INFO [runCase:205] PASSED
[2020-05-15 15:29:33,931] INFO [runCase:205] ------------------------------ live log teardown ------------------------------
[2020-05-15 15:29:33,933] INFO [runCase:205] test_process.py            102 INFO     teardown_function：每个用例结束后都会执行
[2020-05-15 15:29:33,933] INFO [runCase:205] 
[2020-05-15 15:29:33,934] INFO [runCase:205] 
[2020-05-15 15:29:33,935] INFO [runCase:205] ==================== 1 passed, 4 skipped in 21.30 seconds =====================
[2020-05-15 15:29:33,986] INFO [runCase:205] 
[2020-05-15 15:29:33,986] INFO [runCase:210] test cases complate ...
[2020-05-15 16:31:07,253] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 16:31:07,340] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 16:31:09,242] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 16:31:09,243] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 16:31:09,286] INFO [testcase_manage.views:36] 6
[2020-05-15 16:31:09,307] INFO [testcase_manage.views:36] 7
[2020-05-15 16:31:09,310] INFO [testcase_manage.views:36] 8
[2020-05-15 16:31:09,312] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 16:31:09,326] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 16:31:12,914] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 16:31:16,888] INFO [runCase:34] teardown_method...
[2020-05-15 16:31:18,124] INFO [runCase:34] teardown_method...
[2020-05-15 16:31:19,350] INFO [runCase:120] teardown_method...
[2020-05-15 16:31:20,593] INFO [runCase:120] teardown_method...
[2020-05-15 16:31:20,638] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 16:31:22,595] INFO [runCase:201] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 16:31:22,596] INFO [runCase:201] ============================= test session starts =============================
[2020-05-15 16:31:22,597] INFO [runCase:201] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 16:31:22,603] INFO [runCase:201] cachedir: .pytest_cache
[2020-05-15 16:31:22,604] INFO [runCase:201] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 16:31:22,605] INFO [runCase:201] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 16:31:22,606] INFO [runCase:201] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 16:31:22,634] INFO [runCase:201] collecting ... {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 16:31:22,635] INFO [runCase:201] collected 5 items
[2020-05-15 16:31:22,636] INFO [runCase:201] 
[2020-05-15 16:31:22,637] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] SKIPPED
[2020-05-15 16:31:22,639] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] SKIPPED
[2020-05-15 16:31:22,640] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] SKIPPED
[2020-05-15 16:31:22,641] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] SKIPPED
[2020-05-15 16:31:22,735] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 16:31:22,776] INFO [runCase:201] ------------------------------- live log setup --------------------------------
[2020-05-15 16:31:22,778] INFO [runCase:201] conftest.py                 38 INFO     cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\56.jpg
[2020-05-15 16:31:22,779] INFO [runCase:201] conftest.py                 39 INFO     scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\57.jpg
[2020-05-15 16:31:22,781] INFO [runCase:201] conftest.py                 40 INFO     scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\58.jpg
[2020-05-15 16:31:23,810] INFO [runCase:201] -------------------------------- live log call --------------------------------
[2020-05-15 16:31:23,811] INFO [runCase:201] test_process.py            288 INFO     {'中转通道：刷票: ': '{"reqId":"7561f836968611ea8a028cec4b554198","status":0,"msg":"Success","sysTime":"20200515163135","faceImg":""}'}
[2020-05-15 16:31:43,921] INFO [runCase:201] connection_workflow.py     179 INFO     Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 16:31:43,923] INFO [runCase:201] io_services_utils.py       345 INFO     Socket connected: <socket.socket fd=492, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 51562), raddr=('192.168.10.184', 5672)>
[2020-05-15 16:31:43,925] INFO [runCase:201] connection_workflow.py     428 INFO     Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 16:31:43,931] INFO [runCase:201] connection_workflow.py     293 INFO     AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 16:31:43,932] INFO [runCase:201] connection_workflow.py     725 INFO     AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 16:31:43,933] INFO [runCase:201] blocking_connection.py     453 INFO     Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 16:31:43,934] INFO [runCase:201] blocking_connection.py    1247 INFO     Created channel=1
[2020-05-15 16:31:43,940] INFO [runCase:201] blocking_connection.py     788 INFO     Closing connection (200): Normal shutdown
[2020-05-15 16:31:43,941] INFO [runCase:201] channel.py                 534 INFO     Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 16:31:43,942] INFO [runCase:201] channel.py                1119 INFO     Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x0568FA30> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 16:31:43,943] INFO [runCase:201] connection.py             1295 INFO     Closing connection (200): 'Normal shutdown'
[2020-05-15 16:31:43,944] INFO [runCase:201] io_services_utils.py       732 INFO     Aborting transport connection: state=1; <socket.socket fd=492, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 51562), raddr=('192.168.10.184', 5672)>
[2020-05-15 16:31:43,945] INFO [runCase:201] io_services_utils.py       907 INFO     _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=492, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 51562), raddr=('192.168.10.184', 5672)>
[2020-05-15 16:31:43,947] INFO [runCase:201] io_services_utils.py       870 INFO     Deactivating transport: state=1; <socket.socket fd=492, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 51562), raddr=('192.168.10.184', 5672)>
[2020-05-15 16:31:43,948] INFO [runCase:201] connection.py             1999 INFO     AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 16:31:43,948] INFO [runCase:201] connection.py             2065 INFO     Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 16:31:43,948] INFO [runCase:201] io_services_utils.py       883 INFO     Closing transport socket and unlinking: state=3; <socket.socket fd=492, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 51562), raddr=('192.168.10.184', 5672)>
[2020-05-15 16:31:43,950] INFO [runCase:201] blocking_connection.py     525 INFO     User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 16:31:44,946] INFO [runCase:201] test_process.py            296 INFO     {'值机信息: ': {'idNo': '52010119931025997X', 'sex': 1, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515163143', 'lk_inf': '', 'lk_outtime': '20200515193143', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 16:31:44,974] INFO [runCase:201] test_process.py            318 INFO     {'A门:': '{"reqId":"829f1076968611eaab518cec4b554198","status":0,"msg":"Success","sysTime":"20200515163156","result":1}'}
[2020-05-15 16:31:45,010] INFO [runCase:201] test_process.py            344 INFO     {'B门: ': '{"reqId":"82a343d0968611ea82788cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515163156","result":1,"score":0.0}'}
[2020-05-15 16:31:45,011] INFO [runCase:201] test_process.py            346 INFO     test_03测试完成
[2020-05-15 16:31:45,012] INFO [runCase:201] PASSED
[2020-05-15 16:31:45,013] INFO [runCase:201] ------------------------------ live log teardown ------------------------------
[2020-05-15 16:31:45,014] INFO [runCase:201] test_process.py            102 INFO     teardown_function：每个用例结束后都会执行
[2020-05-15 16:31:45,015] INFO [runCase:201] 
[2020-05-15 16:31:45,016] INFO [runCase:201] 
[2020-05-15 16:31:45,016] INFO [runCase:201] ==================== 1 passed, 4 skipped in 22.42 seconds =====================
[2020-05-15 16:31:45,060] INFO [runCase:201] 
[2020-05-15 16:31:45,061] INFO [runCase:206] 测试完成: 第一个机场流程测试  ...
[2020-05-15 17:38:49,673] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 17:38:49,674] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 17:38:50,375] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 17:38:50,376] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 17:38:50,383] INFO [testcase_manage.views:36] 6
[2020-05-15 17:38:50,385] INFO [testcase_manage.views:36] 7
[2020-05-15 17:38:50,387] INFO [testcase_manage.views:36] 8
[2020-05-15 17:38:50,388] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 17:38:50,389] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 17:38:52,034] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 17:38:55,260] INFO [runCase:34] teardown_method...
[2020-05-15 17:38:56,490] INFO [runCase:34] teardown_method...
[2020-05-15 17:38:57,722] INFO [runCase:120] teardown_method...
[2020-05-15 17:38:58,961] INFO [runCase:120] teardown_method...
[2020-05-15 17:38:59,009] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 17:39:00,128] INFO [runCase:201] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 17:39:00,130] INFO [runCase:201] ============================= test session starts =============================
[2020-05-15 17:39:00,131] INFO [runCase:201] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 17:39:00,136] INFO [runCase:201] cachedir: .pytest_cache
[2020-05-15 17:39:00,137] INFO [runCase:201] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 17:39:00,138] INFO [runCase:201] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 17:39:00,140] INFO [runCase:201] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 17:39:00,158] INFO [runCase:201] collecting ... {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 17:39:00,160] INFO [runCase:201] collected 5 items
[2020-05-15 17:39:00,161] INFO [runCase:201] 
[2020-05-15 17:39:00,162] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] SKIPPED
[2020-05-15 17:39:00,164] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] SKIPPED
[2020-05-15 17:39:00,165] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] SKIPPED
[2020-05-15 17:39:00,166] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] SKIPPED
[2020-05-15 17:39:00,284] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 17:39:00,285] INFO [runCase:201] ------------------------------- live log setup --------------------------------
[2020-05-15 17:39:00,286] INFO [runCase:201] conftest.py                 38 INFO     cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\39.jpg
[2020-05-15 17:39:00,287] INFO [runCase:201] conftest.py                 39 INFO     scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\40.jpg
[2020-05-15 17:39:00,288] INFO [runCase:201] conftest.py                 40 INFO     scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\41.jpg
[2020-05-15 17:39:00,329] INFO [runCase:201] -------------------------------- live log call --------------------------------
[2020-05-15 17:39:00,332] INFO [runCase:201] test_process.py            288 INFO     {'中转通道：刷票: ': '{"reqId":"e7deb23a968f11eab4678cec4b554198","status":0,"msg":"Success","sysTime":"20200515173911","faceImg":""}'}
[2020-05-15 17:39:20,338] INFO [runCase:201] connection_workflow.py     179 INFO     Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 17:39:20,340] INFO [runCase:201] io_services_utils.py       345 INFO     Socket connected: <socket.socket fd=476, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 56554), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:39:20,341] INFO [runCase:201] connection_workflow.py     428 INFO     Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 17:39:20,348] INFO [runCase:201] connection_workflow.py     293 INFO     AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:39:20,350] INFO [runCase:201] connection_workflow.py     725 INFO     AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:39:20,351] INFO [runCase:201] blocking_connection.py     453 INFO     Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:39:20,352] INFO [runCase:201] blocking_connection.py    1247 INFO     Created channel=1
[2020-05-15 17:39:20,353] INFO [runCase:201] blocking_connection.py     788 INFO     Closing connection (200): Normal shutdown
[2020-05-15 17:39:20,353] INFO [runCase:201] channel.py                 534 INFO     Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 17:39:20,354] INFO [runCase:201] channel.py                1119 INFO     Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x050402F0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 17:39:20,355] INFO [runCase:201] connection.py             1295 INFO     Closing connection (200): 'Normal shutdown'
[2020-05-15 17:39:20,356] INFO [runCase:201] io_services_utils.py       732 INFO     Aborting transport connection: state=1; <socket.socket fd=476, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 56554), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:39:20,356] INFO [runCase:201] io_services_utils.py       907 INFO     _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=476, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 56554), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:39:20,357] INFO [runCase:201] io_services_utils.py       870 INFO     Deactivating transport: state=1; <socket.socket fd=476, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 56554), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:39:20,357] INFO [runCase:201] connection.py             1999 INFO     AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 17:39:20,359] INFO [runCase:201] connection.py             2065 INFO     Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 17:39:20,360] INFO [runCase:201] io_services_utils.py       883 INFO     Closing transport socket and unlinking: state=3; <socket.socket fd=476, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 56554), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:39:20,360] INFO [runCase:201] blocking_connection.py     525 INFO     User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 17:39:21,358] INFO [runCase:201] test_process.py            296 INFO     {'值机信息: ': {'idNo': '150724198910029617', 'sex': 1, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515173920', 'lk_inf': '', 'lk_outtime': '20200515203920', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 17:39:21,384] INFO [runCase:201] test_process.py            318 INFO     {'A门:': '{"reqId":"f46e5598968f11ea9a8b8cec4b554198","status":0,"msg":"Success","sysTime":"20200515173932","result":1}'}
[2020-05-15 17:39:21,430] INFO [runCase:201] test_process.py            344 INFO     {'B门: ': '{"reqId":"f4724fc0968f11ea900d8cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515173932","result":1,"score":0.0}'}
[2020-05-15 17:39:21,432] INFO [runCase:201] test_process.py            346 INFO     test_03测试完成
[2020-05-15 17:39:21,433] INFO [runCase:201] PASSED
[2020-05-15 17:39:21,433] INFO [runCase:201] ------------------------------ live log teardown ------------------------------
[2020-05-15 17:39:21,434] INFO [runCase:201] test_process.py            102 INFO     teardown_function：每个用例结束后都会执行
[2020-05-15 17:39:21,435] INFO [runCase:201] 
[2020-05-15 17:39:21,435] INFO [runCase:201] 
[2020-05-15 17:39:21,436] INFO [runCase:201] ==================== 1 passed, 4 skipped in 21.31 seconds =====================
[2020-05-15 17:39:21,483] INFO [runCase:201] 
[2020-05-15 17:39:21,484] INFO [runCase:206] 测试完成: 第一个机场流程测试  ...
[2020-05-15 17:54:23,402] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 17:54:23,403] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 17:54:24,094] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 17:54:24,095] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 17:54:24,102] INFO [testcase_manage.views:36] 6
[2020-05-15 17:54:24,103] INFO [testcase_manage.views:36] 7
[2020-05-15 17:54:24,105] INFO [testcase_manage.views:36] 8
[2020-05-15 17:54:24,106] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 17:54:24,106] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 17:54:25,799] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 17:54:28,820] INFO [runCase:34] teardown_method...
[2020-05-15 17:54:30,049] INFO [runCase:34] teardown_method...
[2020-05-15 17:54:31,255] INFO [runCase:120] teardown_method...
[2020-05-15 17:54:32,473] INFO [runCase:120] teardown_method...
[2020-05-15 17:54:32,517] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 17:54:33,591] INFO [runCase:201] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 17:54:33,592] INFO [runCase:201] ============================= test session starts =============================
[2020-05-15 17:54:33,593] INFO [runCase:201] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 17:54:33,599] INFO [runCase:201] cachedir: .pytest_cache
[2020-05-15 17:54:33,602] INFO [runCase:201] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 17:54:33,605] INFO [runCase:201] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 17:54:33,608] INFO [runCase:201] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 17:54:33,621] INFO [runCase:201] collecting ... {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 17:54:33,623] INFO [runCase:201] collected 5 items
[2020-05-15 17:54:33,626] INFO [runCase:201] 
[2020-05-15 17:54:33,631] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] SKIPPED
[2020-05-15 17:54:33,634] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] SKIPPED
[2020-05-15 17:54:33,637] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] SKIPPED
[2020-05-15 17:54:33,640] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] SKIPPED
[2020-05-15 17:54:33,730] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 17:54:33,733] INFO [runCase:201] ------------------------------- live log setup --------------------------------
[2020-05-15 17:54:33,736] INFO [runCase:201] conftest.py                 38 INFO     cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\20.jpg
[2020-05-15 17:54:33,739] INFO [runCase:201] conftest.py                 39 INFO     scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\21.jpg
[2020-05-15 17:54:33,743] INFO [runCase:201] conftest.py                 40 INFO     scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\22.jpg
[2020-05-15 17:54:33,780] INFO [runCase:201] -------------------------------- live log call --------------------------------
[2020-05-15 17:54:33,784] INFO [runCase:201] test_process.py            288 INFO     {'中转通道：刷票: ': '{"reqId":"143f6134969211eaa0cc8cec4b554198","status":0,"msg":"Success","sysTime":"20200515175445","faceImg":""}'}
[2020-05-15 17:54:53,790] INFO [runCase:201] connection_workflow.py     179 INFO     Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 17:54:53,802] INFO [runCase:201] io_services_utils.py       345 INFO     Socket connected: <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 57682), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:54:53,803] INFO [runCase:201] connection_workflow.py     428 INFO     Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 17:54:53,809] INFO [runCase:201] connection_workflow.py     293 INFO     AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:54:53,811] INFO [runCase:201] connection_workflow.py     725 INFO     AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:54:53,815] INFO [runCase:201] blocking_connection.py     453 INFO     Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 17:54:53,817] INFO [runCase:201] blocking_connection.py    1247 INFO     Created channel=1
[2020-05-15 17:54:53,821] INFO [runCase:201] blocking_connection.py     788 INFO     Closing connection (200): Normal shutdown
[2020-05-15 17:54:53,824] INFO [runCase:201] channel.py                 534 INFO     Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 17:54:53,827] INFO [runCase:201] channel.py                1119 INFO     Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04E2FAD0> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 17:54:53,831] INFO [runCase:201] connection.py             1295 INFO     Closing connection (200): 'Normal shutdown'
[2020-05-15 17:54:53,835] INFO [runCase:201] io_services_utils.py       732 INFO     Aborting transport connection: state=1; <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 57682), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:54:53,837] INFO [runCase:201] io_services_utils.py       907 INFO     _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 57682), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:54:53,841] INFO [runCase:201] io_services_utils.py       870 INFO     Deactivating transport: state=1; <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 57682), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:54:53,844] INFO [runCase:201] connection.py             1999 INFO     AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 17:54:53,847] INFO [runCase:201] connection.py             2065 INFO     Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 17:54:53,851] INFO [runCase:201] io_services_utils.py       883 INFO     Closing transport socket and unlinking: state=3; <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 57682), raddr=('192.168.10.184', 5672)>
[2020-05-15 17:54:53,854] INFO [runCase:201] blocking_connection.py     525 INFO     User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 17:54:54,820] INFO [runCase:201] test_process.py            296 INFO     {'值机信息: ': {'idNo': '511722199902201146', 'sex': 2, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515175453', 'lk_inf': '', 'lk_outtime': '20200515205453', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 17:54:54,849] INFO [runCase:201] test_process.py            318 INFO     {'A门:': '{"reqId":"20d150fa969211ea9cef8cec4b554198","status":0,"msg":"Success","sysTime":"20200515175506","result":1}'}
[2020-05-15 17:54:54,883] INFO [runCase:201] test_process.py            344 INFO     {'B门: ': '{"reqId":"20d5c0dc969211ea992b8cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515175506","result":1,"score":0.0}'}
[2020-05-15 17:54:54,887] INFO [runCase:201] test_process.py            346 INFO     test_03测试完成
[2020-05-15 17:54:54,890] INFO [runCase:201] PASSED
[2020-05-15 17:54:54,892] INFO [runCase:201] ------------------------------ live log teardown ------------------------------
[2020-05-15 17:54:54,897] INFO [runCase:201] test_process.py            102 INFO     teardown_function：每个用例结束后都会执行
[2020-05-15 17:54:54,900] INFO [runCase:201] 
[2020-05-15 17:54:54,903] INFO [runCase:201] 
[2020-05-15 17:54:54,908] INFO [runCase:201] ==================== 1 passed, 4 skipped in 21.30 seconds =====================
[2020-05-15 17:54:54,943] INFO [runCase:201] 
[2020-05-15 17:54:54,947] INFO [runCase:206] 测试完成: 第一个机场流程测试  ...
[2020-05-15 18:01:55,736] INFO [testcase_manage.views:50] queryModulars.POST
[2020-05-15 18:01:55,737] INFO [testcase_manage.views:52] 动态布控
[2020-05-15 18:01:56,422] INFO [testcase_manage.views:29] <QueryDict: {'products': ['动态布控'], 'modulars': ['数据平台'], 'product': ['动态布控'], 'modular': ['数据平台']}>
[2020-05-15 18:01:56,423] INFO [testcase_manage.views:33] <QuerySet [<TestCase: 人脸识别记录-列表-条件查询>, <TestCase: 人脸识别记录-详情>, <TestCase: 第一个机场流程测试>]>
[2020-05-15 18:01:56,428] INFO [testcase_manage.views:36] 6
[2020-05-15 18:01:56,430] INFO [testcase_manage.views:36] 7
[2020-05-15 18:01:56,432] INFO [testcase_manage.views:36] 8
[2020-05-15 18:01:56,433] INFO [testcase_manage.views:42] {6: {'casename': '人脸识别记录-列表-条件查询', 'api': '/api/v1/face/record/search/list', 'user': 'admin'}, 7: {'casename': '人脸识别记录-详情', 'api': '/api/v1/face/record/search/details', 'user': 'admin'}, 8: {'casename': '第一个机场流程测试', 'api': '', 'user': 'admin'}}
[2020-05-15 18:01:56,434] INFO [testcase_manage.views:44] <JsonResponse status_code=200, "application/json">
[2020-05-15 18:02:00,693] INFO [testcase_manage.views:68] <QueryDict: {'caseNum': ['6', '7', '8']}>
[2020-05-15 18:02:03,599] INFO [runCase:34] teardown_method...
[2020-05-15 18:02:04,817] INFO [runCase:34] teardown_method...
[2020-05-15 18:02:06,017] INFO [runCase:120] teardown_method...
[2020-05-15 18:02:07,235] INFO [runCase:120] teardown_method...
[2020-05-15 18:02:07,284] INFO [runCase:195] 开始测试: 第一个机场流程测试 ...
[2020-05-15 18:02:08,368] INFO [runCase:201] {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 18:02:08,369] INFO [runCase:201] ============================= test session starts =============================
[2020-05-15 18:02:08,370] INFO [runCase:201] platform win32 -- Python 3.7.3, pytest-4.0.2, py-1.8.0, pluggy-0.12.0 -- C:\python37\python.exe
[2020-05-15 18:02:08,375] INFO [runCase:201] cachedir: .pytest_cache
[2020-05-15 18:02:08,377] INFO [runCase:201] metadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.0.2', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'allure-adaptor': '1.7.10', 'html': '1.21.1', 'metadata': '1.8.0', 'pythonpath': '0.7.3', 'repeat': '0.8.0', 'rerunfailures': '7.0'}, 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_131'}
[2020-05-15 18:02:08,382] INFO [runCase:201] rootdir: D:\workfile\zhongkeyuan_workspace\TestAutomation\process_test\https_20190709, inifile: pytest.ini
[2020-05-15 18:02:08,385] INFO [runCase:201] plugins: allure-adaptor-1.7.10, html-1.21.1, metadata-1.8.0, pythonpath-0.7.3, repeat-0.8.0, rerunfailures-7.0
[2020-05-15 18:02:08,399] INFO [runCase:201] collecting ... {'cwd': 'D:\\workfile\\zhongkeyuan_workspace\\TestAutomation'}
[2020-05-15 18:02:08,402] INFO [runCase:201] collected 5 items
[2020-05-15 18:02:08,405] INFO [runCase:201] 
[2020-05-15 18:02:08,407] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_anjian_and_zhiji[creat_zhiji_random0-insert_data_into_mysql0] SKIPPED
[2020-05-15 18:02:08,411] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_zhiji[creat_zhiji_random0] SKIPPED
[2020-05-15 18:02:08,415] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_01[creat_zhiji_byFlight0] SKIPPED
[2020-05-15 18:02:08,418] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_02[creat_zhiji_random0] SKIPPED
[2020-05-15 18:02:08,486] INFO [runCase:201] process_test\https_20190709\test_case\test_process.py::test_03
[2020-05-15 18:02:08,489] INFO [runCase:201] ------------------------------- live log setup --------------------------------
[2020-05-15 18:02:08,494] INFO [runCase:201] conftest.py                 38 INFO     cardPhoto: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\36.jpg
[2020-05-15 18:02:08,498] INFO [runCase:201] conftest.py                 39 INFO     scenePhoto: D:\workfile\zhongkeyuan_workspace\test_photoes\picture(现场照片)\37.jpg
[2020-05-15 18:02:08,501] INFO [runCase:201] conftest.py                 40 INFO     scenePhoto_fuhe: D:\workfile\zhongkeyuan_workspace	est_photoes\picture(现场照片)\38.jpg
[2020-05-15 18:02:08,534] INFO [runCase:201] -------------------------------- live log call --------------------------------
[2020-05-15 18:02:08,540] INFO [runCase:201] test_process.py            288 INFO     {'中转通道：刷票: ': '{"reqId":"234da666969311eab54c8cec4b554198","status":0,"msg":"Success","sysTime":"20200515180219","faceImg":""}'}
[2020-05-15 18:02:28,547] INFO [runCase:201] connection_workflow.py     179 INFO     Pika version 1.1.0 connecting to ('192.168.10.184', 5672)
[2020-05-15 18:02:28,549] INFO [runCase:201] io_services_utils.py       345 INFO     Socket connected: <socket.socket fd=452, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 58203), raddr=('192.168.10.184', 5672)>
[2020-05-15 18:02:28,551] INFO [runCase:201] connection_workflow.py     428 INFO     Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950>, _StreamingProtocolShim: <SelectConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>).
[2020-05-15 18:02:28,557] INFO [runCase:201] connection_workflow.py     293 INFO     AMQPConnector - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 18:02:28,559] INFO [runCase:201] connection_workflow.py     725 INFO     AMQPConnectionWorkflow - reporting success: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 18:02:28,560] INFO [runCase:201] blocking_connection.py     453 INFO     Connection workflow succeeded: <SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>
[2020-05-15 18:02:28,562] INFO [runCase:201] blocking_connection.py    1247 INFO     Created channel=1
[2020-05-15 18:02:28,564] INFO [runCase:201] blocking_connection.py     788 INFO     Closing connection (200): Normal shutdown
[2020-05-15 18:02:28,565] INFO [runCase:201] channel.py                 534 INFO     Closing channel (200): 'Normal shutdown' on <Channel number=1 OPEN conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 18:02:28,568] INFO [runCase:201] channel.py                1119 INFO     Received <Channel.CloseOk> on <Channel number=1 CLOSING conn=<SelectConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x04D1F950> params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>>
[2020-05-15 18:02:28,570] INFO [runCase:201] connection.py             1295 INFO     Closing connection (200): 'Normal shutdown'
[2020-05-15 18:02:28,571] INFO [runCase:201] io_services_utils.py       732 INFO     Aborting transport connection: state=1; <socket.socket fd=452, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 58203), raddr=('192.168.10.184', 5672)>
[2020-05-15 18:02:28,574] INFO [runCase:201] io_services_utils.py       907 INFO     _AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=452, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 58203), raddr=('192.168.10.184', 5672)>
[2020-05-15 18:02:28,575] INFO [runCase:201] io_services_utils.py       870 INFO     Deactivating transport: state=1; <socket.socket fd=452, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 58203), raddr=('192.168.10.184', 5672)>
[2020-05-15 18:02:28,576] INFO [runCase:201] connection.py             1999 INFO     AMQP stack terminated, failed to connect, or aborted: opened=True, error-arg=None; pending-error=ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 18:02:28,578] INFO [runCase:201] connection.py             2065 INFO     Stack terminated due to ConnectionClosedByClient: (200) 'Normal shutdown'
[2020-05-15 18:02:28,580] INFO [runCase:201] io_services_utils.py       883 INFO     Closing transport socket and unlinking: state=3; <socket.socket fd=452, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.10.42', 58203), raddr=('192.168.10.184', 5672)>
[2020-05-15 18:02:28,583] INFO [runCase:201] blocking_connection.py     525 INFO     User-initiated close: result=BlockingConnection__OnClosedArgs(connection=<SelectConnection CLOSED transport=None params=<ConnectionParameters host=192.168.10.184 port=5672 virtual_host=/ ssl=False>>, error=ConnectionClosedByClient: (200) 'Normal shutdown')
[2020-05-15 18:02:29,568] INFO [runCase:201] test_process.py            296 INFO     {'值机信息: ': {'idNo': '530622197309139919', 'sex': 1, 'lk_flight': 'CA8128', 'lk_gateno': '10', 'lk_date': '20200515', 'lk_chkt': '20200515180228', 'lk_inf': '', 'lk_outtime': '20200515210228', 'lk_cname': '大西瓜7', 'lk_ename': 'DAXIGUA7', 'lk_seat': '03A', 'lk_desk': 'CTU', 'lk_bdno': '03'}}
[2020-05-15 18:02:29,594] INFO [runCase:201] test_process.py            318 INFO     {'A门:': '{"reqId":"2fde5e82969311eabd728cec4b554198","status":0,"msg":"Success","sysTime":"20200515180240","result":1}'}
[2020-05-15 18:02:29,631] INFO [runCase:201] test_process.py            344 INFO     {'B门: ': '{"reqId":"2fe25712969311eab7d38cec4b554198","status":105,"msg":"not presecurity","sysTime":"20200515180240","result":1,"score":0.0}'}
[2020-05-15 18:02:29,634] INFO [runCase:201] test_process.py            346 INFO     test_03测试完成
[2020-05-15 18:02:29,635] INFO [runCase:201] PASSED
[2020-05-15 18:02:29,636] INFO [runCase:201] ------------------------------ live log teardown ------------------------------
[2020-05-15 18:02:29,638] INFO [runCase:201] test_process.py            102 INFO     teardown_function：每个用例结束后都会执行
[2020-05-15 18:02:29,639] INFO [runCase:201] 
[2020-05-15 18:02:29,640] INFO [runCase:201] 
[2020-05-15 18:02:29,644] INFO [runCase:201] ==================== 1 passed, 4 skipped in 21.27 seconds =====================
[2020-05-15 18:02:29,687] INFO [runCase:201] 
[2020-05-15 18:02:29,689] INFO [runCase:206] 测试完成: 第一个机场流程测试  ...
